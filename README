表及索引
| wechat_resource_cache | CREATE TABLE `wechat_resource_cache` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `keyword` varchar(100) NOT NULL,
  `title` varchar(100) NOT NULL,
  `url` varchar(255) NOT NULL,
  `post_date` varchar(255) NOT NULL,
  `request_count` int(11) NOT NULL,
  `download_url` varchar(255) NOT NULL,
  `update_time` datetime DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  `verify_time` datetime DEFAULT NULL,
  `user` varchar(100) NOT NULL,
  `uploader` varchar(100) NOT NULL,
  `type` varchar(100) NOT NULL,
  `OpenID` varchar(100) NOT NULL,
  `UnionID` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `OpenID` (`OpenID`),
  KEY `keyword` (`keyword`),
  KEY `index_name` (`create_time`)
) ENGINE=InnoDB AUTO_INCREMENT=16570 DEFAULT CHARSET=utf8 |

wechat_user
CREATE TABLE `wechat_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) DEFAULT NULL,
  `OpenID` varchar(100) NOT NULL,
  `UnionID` varchar(100) DEFAULT NULL,
  `last_input` varchar(255) DEFAULT NULL,
  `last_page` int(11) DEFAULT NULL,
  `last_request_time` datetime DEFAULT NULL,
  `keyword` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `openid` (`OpenID`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8



#uploader == manual 则为人工插入

celery部分：以op用户运行 nohup python manage.py celery worker -c 4 --loglevel=info >/dev/null &
由于考虑到异步是少数而且连续操作异步也容易出问题，暂时不用异步了